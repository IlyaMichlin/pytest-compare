name: Release Package

on:
  workflow_dispatch:
    inputs:
      increment_version:
        description: 'Increment version by major, minor, or patch'
        required: true
        default: 'patch'
        type: choice
        options:
        - major
        - minor
        - patch

env:
  VERSION_FILE_PATH: pytest_compare/__init__.py

jobs:
  run-tests:
    uses: ./.github/workflows/tests.yml

  release-package:
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set version
        run: |
          VERSION_REGEX='^(__version__ = \")(([[:digit:]]+\.)*[[:digit:]]+)((a|b|rc)[[:digit:]]+)?(\.post[[:digit:]]+)?(.dev[[:digit:]]+)?(\")$'
          
          # get current version from version file
          CURRENT_VERSION=`sed -n -E "s/$VERSION_REGEX/\2/p" $VERSION_FILE_PATH`
          echo "Current version: $CURRENT_VERSION"
          
          # switch case for incrementing_version based on input
          case ${{ inputs.increment_version }} in
            major)
            NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. '{$1=$1+1; $2=0; $3=0; print $0}' OFS=".")
            ;;
            minor)
            NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. '{$2=$2+1; $3=0; print $0}' OFS=".")
            ;;
            patch)
            NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. '{$3=$3+1; print $0}' OFS=".")
            ;;
            *)
            echo "Invalid input for increment_version"
            exit 1
            ;;
          esac
          echo "New version: $NEW_VERSION"
          echo "RELEASE_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          
          # update version file
          sed -i -E "s/$VERSION_REGEX/\1$NEW_VERSION\8/" $VERSION_FILE_PATH

      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install python dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements-release.txt

      - name: Update CHANGELOG.md
        run: git-changelog . -o CHANGELOG.md

      - name: Build package
        run: python -m build

      - name: Publish package to TestPyPI
        run: |
          python -m twine upload -r testpypi -u ${{ secrets.TEST_PYPI_API_USER }} -p ${{ secrets.TEST_PYPI_API_TOKEN }} dist/*

      - name: Install test package
        run: |
          pip install --index-url https://test.pypi.org/simple/ --no-deps pytest-compare
          
          # import to check if package is installed correctly
          python -c "import pytest_compare"

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github@actions.com"
          git add .
          git commit -m "Increment version to $NEW_VERSION"
          git push

      - name: Publish a Python distribution to PyPI
        run: |
          python -m twine upload -u ${{ secrets.PYPI_API_USER }} -p ${{ secrets.PYPI_API_TOKEN }} dist/*

      - name: Release New Version
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ env.RELEASE_VERSION }}
          tag_name: v${{ env.RELEASE_VERSION }}

  deploy_docs:
    needs: release-package
    uses: ./.github/workflows/deploy_docs.yml
